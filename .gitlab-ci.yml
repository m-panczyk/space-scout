image: barichello/godot-ci:4.4.1

stages:
  - export
  - serve

variables:
  EXPORT_NAME: Space_Scout
  ARTIFACTS_DIR: "/srv/artifacts"
  NGINX_PORT: 8080
  WEB_CONTAINER_NAME: "spacescout-web"
  WEB_HOST_PORT: 8443  # HTTPS port on the host

before_script:
  - mkdir -v -p build/linux
  - mkdir -v -p build/windows
  - mkdir -v -p build/mac
  - mkdir -v -p build/web
  - mkdir -v -p build/android

linux:
  stage: export
  script:
    - godot --headless --verbose --export-release "Linux" ./build/linux/$EXPORT_NAME.x86_64
  artifacts:
    name: $EXPORT_NAME-$CI_JOB_NAME
    paths:
      - build/linux

windows:
  stage: export
  script:
    - godot --headless --verbose --export-release "Windows Desktop" ./build/windows/$EXPORT_NAME.exe
  artifacts:
    name: $EXPORT_NAME-$CI_JOB_NAME
    paths:
      - build/windows

mac:
  stage: export
  script:
    - godot --headless --verbose --export-release "macOS" ./build/mac/$EXPORT_NAME.zip
  artifacts:
    name: $EXPORT_NAME-$CI_JOB_NAME
    paths:
      - build/mac

android:
  stage: export
  script:
    - godot --headless --verbose --export-release "Android" ./build/android/$EXPORT_NAME.apk
  artifacts:
    name: $EXPORT_NAME-$CI_JOB_NAME
    paths:
      - build/android

web:
  stage: export
  script:
    - godot --headless --verbose --export-release "Web" ./build/web/index.html
  artifacts:
    name: $EXPORT_NAME-$CI_JOB_NAME
    paths:
      - build/web

serve:
  stage: serve
  image: docker:24.0.5-git
  services:
    - name: docker:24.0.5-dind
      alias: docker
      command: ["--tls=false"]
  variables:
    DOCKER_HOST: tcp://docker:2375
    DOCKER_TLS_CERTDIR: ""
    DOCKER_DRIVER: overlay2
  dependencies:
    - web
  before_script:
    - apk add --no-cache bash curl
    - docker info
  script:
    # Create nginx config
    - |
      cat > nginx.conf << EOF
      server {
          listen 443 ssl;
          server_name spacescout.home;
          
          ssl_certificate /etc/nginx/ssl/cert.pem;
          ssl_certificate_key /etc/nginx/ssl/privkey.pem;
          
          location / {
              root /usr/share/nginx/html;
              index index.html;
              try_files \$uri \$uri/ /index.html;
          }
          
          location /downloads/ {
              alias /usr/share/nginx/downloads/;
              autoindex on;
          }
      }
      EOF
    
    # Stop and remove existing container if it exists
    - docker rm -f $WEB_CONTAINER_NAME || true
    
    # Create directory structure for downloads and verify content
    - mkdir -p artifacts-temp
    - cp -R build/* artifacts-temp/
    - ls -la artifacts-temp
    - ls -la build
    
    # Create Docker volume for artifacts
    - docker volume create spacescout-artifacts
    
    # Create temporary container to copy artifacts to volume
    - |
      docker run --rm \
        -v spacescout-artifacts:/data \
        -v $(pwd)/artifacts-temp:/src:ro \
        alpine sh -c "mkdir -p /data/downloads && ls -la /src && cp -R /src/. /data/downloads/ && ls -la /data/downloads"
    
    # Create SSL certificates inside a container
    - |
      docker run --rm \
        -v spacescout-artifacts:/data \
        alpine sh -c "mkdir -p /data/ssl && \
        if [ ! -f /data/ssl/cert.pem ]; then \
          apk add --no-cache openssl && \
          openssl req -x509 -nodes -days 365 -newkey rsa:2048 \
            -keyout /data/ssl/privkey.pem \
            -out /data/ssl/cert.pem \
            -subj '/CN=spacescout.home'; \
        fi"
    
    # Copy nginx config to volume
    - |
      docker run --rm \
        -v spacescout-artifacts:/data \
        -v $(pwd)/nginx.conf:/nginx.conf:ro \
        alpine sh -c "cat /nginx.conf > /data/nginx.conf"
        
    # Start nginx container with HTTPS
    - |
      docker run -d \
        --name $WEB_CONTAINER_NAME \
        --restart always \
        -p $WEB_HOST_PORT:443 \
        -v spacescout-artifacts:/data \
        nginx:alpine sh -c "cp /data/nginx.conf /etc/nginx/conf.d/default.conf && \
                           mkdir -p /etc/nginx/ssl && \
                           cp /data/ssl/cert.pem /etc/nginx/ssl/ && \
                           cp /data/ssl/privkey.pem /etc/nginx/ssl/ && \
                           mkdir -p /usr/share/nginx/downloads && \
                           cp -R /data/downloads/* /usr/share/nginx/html/ && \
                           cp -R /data/downloads /usr/share/nginx/ && \
                           nginx -g 'daemon off;'"
    
    # Verify container is running
    - docker ps | grep $WEB_CONTAINER_NAME
    
    # Output access information
    - echo "Game web build is now available at https://spacescout.home:$WEB_HOST_PORT"
    - echo "Download all builds at https://spacescout.home:$WEB_HOST_PORT/downloads/"
  only:
    - master
