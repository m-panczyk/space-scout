image: barichello/godot-ci:4.4.1
stages:
  - export
  - serve

variables:
  EXPORT_NAME: Space_Scout
  ARTIFACTS_DIR: "/srv/artifacts"
  NGINX_PORT: 8080

before_script:
  - mkdir -v -p build/linux
  - mkdir -v -p build/windows
  - mkdir -v -p build/mac
  - mkdir -v -p build/web
  - mkdir -v -p build/android

linux:
  stage: export
  script:
    - godot --headless --verbose --export-release "Linux" ./build/linux/$EXPORT_NAME.x86_64
  artifacts:
    name: $EXPORT_NAME-$CI_JOB_NAME
    paths:
      - build/linux

windows:
  stage: export
  script:
    - godot --headless --verbose --export-release "Windows Desktop" ./build/windows/$EXPORT_NAME.exe
  artifacts:
    name: $EXPORT_NAME-$CI_JOB_NAME
    paths:
      - build/windows

mac:
  stage: export
  script:
    - godot --headless --verbose --export-release "macOS" ./build/mac/$EXPORT_NAME.zip
  artifacts:
    name: $EXPORT_NAME-$CI_JOB_NAME
    paths:
      - build/mac

android:
  stage: export
  script:
    - godot --headless --verbose --export-release "Android" ./build/android/$EXPORT_NAME.apk
  artifacts:
    name: $EXPORT_NAME-$CI_JOB_NAME
    paths:
      - build/android

web:
  stage: export
  script:
    - godot --headless --verbose --export-release "Web" ./build/web/index.html
  artifacts:
    name: $EXPORT_NAME-$CI_JOB_NAME
    paths:
      - build/web

# Web server for artifacts
serve_artifacts:
  stage: serve
  image: nginx:alpine
  dependencies:
    - linux
    - windows
    - mac
    - android
    - web
  before_script:
    - apk add --no-cache bash jq curl
  script:
    # Create timestamp and version info
    - BUILD_TIMESTAMP=$(date +%Y%m%d_%H%M%S)
    - BUILD_VERSION=$(echo $CI_COMMIT_SHA | cut -c1-8)
    - BUILD_DIR="${ARTIFACTS_DIR}/${CI_COMMIT_REF_NAME}_${BUILD_VERSION}_${BUILD_TIMESTAMP}"
    
    # Set up directory structure
    - mkdir -p ${BUILD_DIR}/{linux,windows,mac,android,web}
    - mkdir -p ${ARTIFACTS_DIR}/latest
    
    # Copy artifacts
    - cp -r build/linux/* ${BUILD_DIR}/linux/
    - cp -r build/windows/* ${BUILD_DIR}/windows/
    - cp -r build/mac/* ${BUILD_DIR}/mac/
    - cp -r build/android/* ${BUILD_DIR}/android/
    - cp -r build/web/* ${BUILD_DIR}/web/
    
    # Create latest symlinks
    - ln -sfn ${BUILD_DIR}/linux/* ${ARTIFACTS_DIR}/latest/linux/
    - ln -sfn ${BUILD_DIR}/windows/* ${ARTIFACTS_DIR}/latest/windows/
    - ln -sfn ${BUILD_DIR}/mac/* ${ARTIFACTS_DIR}/latest/mac/
    - ln -sfn ${BUILD_DIR}/android/* ${ARTIFACTS_DIR}/latest/android/
    - ln -sfn ${BUILD_DIR}/web/* ${ARTIFACTS_DIR}/latest/web/
    
    # Generate build information file
    - |
      cat > ${BUILD_DIR}/build_info.json << EOF
      {
        "project": "$CI_PROJECT_NAME",
        "version": "$BUILD_VERSION",
        "branch": "$CI_COMMIT_REF_NAME",
        "commit": "$CI_COMMIT_SHA",
        "built_by": "$GITLAB_USER_NAME",
        "build_date": "$(date)",
        "pipeline_id": "$CI_PIPELINE_ID",
        "job_id": "$CI_JOB_ID"
      }
      EOF
    
    # Create index.html for root
    - |
      cat > ${ARTIFACTS_DIR}/index.html << EOF
      <!DOCTYPE html>
      <html>
      <head>
        <title>Space Scout Builds</title>
        <meta charset="UTF-8">
        <meta name="viewport" content="width=device-width, initial-scale=1">
        <style>
          body { font-family: Arial, sans-serif; line-height: 1.6; margin: 0; padding: 20px; color: #333; }
          h1 { color: #2c3e50; }
          .build-section { margin-bottom: 40px; }
          .platform-links { display: flex; flex-wrap: wrap; gap: 10px; margin-top: 10px; }
          .platform-btn { padding: 8px 16px; background: #3498db; color: white; text-decoration: none; border-radius: 4px; }
          .platform-btn:hover { background: #2980b9; }
          .build-info { background: #f5f5f5; padding: 15px; border-radius: 4px; margin-top: 15px; }
          .latest-section { background: #e8f4f8; padding: 20px; border-radius: 4px; margin-bottom: 30px; }
        </style>
      </head>
      <body>
        <h1>Space Scout Game Builds</h1>
        
        <div class="latest-section">
          <h2>Latest Build</h2>
          <div class="platform-links">
            <a class="platform-btn" href="latest/linux/">Linux</a>
            <a class="platform-btn" href="latest/windows/">Windows</a>
            <a class="platform-btn" href="latest/mac/">macOS</a>
            <a class="platform-btn" href="latest/android/">Android</a>
            <a class="platform-btn" href="latest/web/">Web</a>
          </div>
        </div>
        
        <div class="build-section">
          <h2>Build from $CI_COMMIT_REF_NAME ($BUILD_VERSION)</h2>
          <p>Built on $(date)</p>
          <div class="platform-links">
            <a class="platform-btn" href="${CI_COMMIT_REF_NAME}_${BUILD_VERSION}_${BUILD_TIMESTAMP}/linux/">Linux</a>
            <a class="platform-btn" href="${CI_COMMIT_REF_NAME}_${BUILD_VERSION}_${BUILD_TIMESTAMP}/windows/">Windows</a>
            <a class="platform-btn" href="${CI_COMMIT_REF_NAME}_${BUILD_VERSION}_${BUILD_TIMESTAMP}/mac/">macOS</a>
            <a class="platform-btn" href="${CI_COMMIT_REF_NAME}_${BUILD_VERSION}_${BUILD_TIMESTAMP}/android/">Android</a>
            <a class="platform-btn" href="${CI_COMMIT_REF_NAME}_${BUILD_VERSION}_${BUILD_TIMESTAMP}/web/">Web</a>
          </div>
          <div class="build-info">
            <p>Commit: $CI_COMMIT_SHA</p>
            <p>Branch: $CI_COMMIT_REF_NAME</p>
            <p>Built by: $GITLAB_USER_NAME</p>
            <p>Pipeline: <a href="$CI_PROJECT_URL/-/pipelines/$CI_PIPELINE_ID">$CI_PIPELINE_ID</a></p>
          </div>
        </div>
      </body>
      </html>
      EOF
    
    # Configure Nginx to serve the artifacts
    - |
      cat > /etc/nginx/conf.d/default.conf << EOF
      server {
          listen ${NGINX_PORT};
          server_name _;
          
          root ${ARTIFACTS_DIR};
          autoindex on;
          
          # Add headers for better security
          add_header X-Content-Type-Options "nosniff";
          add_header X-Frame-Options "SAMEORIGIN";
          add_header X-XSS-Protection "1; mode=block";
          
          # Set proper MIME types
          include /etc/nginx/mime.types;
          default_type application/octet-stream;
          
          # Configure directory listing
          location / {
              try_files \$uri \$uri/ =404;
              autoindex on;
              autoindex_exact_size off;
              autoindex_localtime on;
          }
          
          # For web build to run properly
          location /web/ {
              types {
                  application/wasm wasm;
                  application/octet-stream pck;
              }
          }
      }
      EOF
    
    # Start Nginx in the foreground
    - echo "Starting artifacts web server on port ${NGINX_PORT}"
    - echo "Artifacts will be available at http://$(hostname -i):${NGINX_PORT}/"
    - nginx -g "daemon off;" &
    
    # Keep container running
    - echo "Web server is now running. Press Ctrl+C to stop."
    - echo "This job will stay active for the duration of the pipeline."
    - sleep infinity
  environment:
    name: artifacts
    url: http://$CI_SERVER_HOST:$NGINX_PORT
  artifacts:
    expose_as: 'Game Builds'
    paths:
      - ${ARTIFACTS_DIR}
